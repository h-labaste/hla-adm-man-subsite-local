trigger: none

pr:
  branches:
    include:
    - refs/heads/CI/PROD/*

jobs:
- job: BuildAndGeneratePRDetails
  displayName: "Build et Générer les détails de la PR"
  pool:
    name: hladm

  steps:
    # Étape 1 : Publier le fichier Markdown
    - task: PowerShell@2
      displayName: "Créer un fichier Markdown avec les détails de la Pull Request via API"
      inputs:
        targetType: 'inline'
        script: |
          # Variables Azure DevOps
          $organizationUrl = "https://dev.azure.com/$(System.CollectionId)"
          $project = "$(System.TeamProject)"
          $repositoryId = "$(Build.Repository.Name)"
          $pullRequestId = "$(System.PullRequest.PullRequestId)"
          $personalAccessToken = "$(System.AccessToken)"  # Token généré automatiquement par Azure DevOps

          # Construire l'URL API pour récupérer les détails de la PR
          $apiUrl = "$organizationUrl/$project/_apis/git/repositories/$repositoryId/pullRequests/$pullRequestId?api-version=6.0"

          # Authentification avec PAT
          $headers = @{
            Authorization = "Bearer $personalAccessToken"
          }

          try {
              # Appeler l'API pour récupérer les informations de la PR
              $response = Invoke-RestMethod -Uri $apiUrl -Headers $headers -Method Get

              # Extraire les informations nécessaires
              $prTitle = $response.title
              $prDescription = $response.description
              $prSourceBranch = $response.sourceRefName
              $prTargetBranch = $response.targetRefName
              $prCreatedBy = $response.createdBy.displayName
              $prCreationDate = $response.creationDate
              $prStatus = $response.status
              $prMergeStatus = $response.mergeStatus
              $prCommitsUrl = $response._links.commits.href
              $prReviewers = $response.reviewers | ForEach-Object { $_.displayName }

              # Construire le contenu Markdown
              $content = @"
              # Pull Request Details

              ## General Information
              - **Title**: $prTitle
              - **Description**: $prDescription
              - **Source Branch**: $prSourceBranch
              - **Target Branch**: $prTargetBranch
              - **Created By**: $prCreatedBy
              - **Created On**: $prCreationDate
              - **Status**: $prStatus
              - **Merge Status**: $prMergeStatus

              ## Reviewers
              $(if ($prReviewers) { $prReviewers -join "`n- " } else { "None" })

              ## Commits
              [View Commits]($prCommitsUrl)

              ---
              Generated by Azure DevOps Pipeline
              "@

              # Définir le chemin du fichier Markdown
              $filePath = "$(Build.ArtifactStagingDirectory)/PullRequestDetails.md"

              # Créer le fichier Markdown
              Set-Content -Path $filePath -Value $content
              Write-Output "Fichier Markdown créé : $filePath"

          } catch {
              Write-Output "Erreur lors de la récupération des informations de la PR : $_"
              exit 1
          }

    # Étape 2 : Publier le fichier Markdown
    - task: PublishBuildArtifacts@1
      displayName: "Publier le fichier Markdown"
      inputs:
        PathtoPublish: "$(System.DefaultWorkingDirectory)/PullRequestDetails.md"
        ArtifactName: "PullRequestDetails"
